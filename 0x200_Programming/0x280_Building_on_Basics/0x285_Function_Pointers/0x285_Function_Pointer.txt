A pointer simply contains a memory address and is given a data type that describes where it points
Usually, pointers are used for variables; however, they can also be used for functions
Using function pointers:

funcptr_example.c
__________________________________________________________________________________
#include <stdio.h>

int func_one() {
	printf("This is function one\n");
	return 1;
}

int func_two() {
	printf("This is funciton two\n");
	return 2;
}

int main() {
	int value;
	int (*function_ptr) ();

	function_ptr = func_one;
	printf("function_ptr is at 0x%08x\n", function_ptr);
	value = function_ptr();
	printf("value returned was %d\n", value);

	function_ptr = func_two;
	printf("function_ptr is 0x%08x\n", function_ptr);
	value = function_ptr();
	printf("value returned was %d\n", value);
}
__________________________________________________________________________________

In this program, a pointer aptly named function_ptr is declared in main()
This pointer is then set to point at the function func_one() and is called; then it is set again and used to call func_two()

__________________________________________________________________________________
reader@hacking:~/booksrc $ gcc funcptr_example.c
reader@hacking:~/booksrc $ ./a.out
function_ptr is at 0x0882268a
This is function one
value returned was 1
function_ptr is 0x088226a1
This is funciton two
value returned was 2
__________________________________________________________________________________