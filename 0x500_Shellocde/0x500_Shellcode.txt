So far, the shellcode used in our exploits has been just a string of copied and pasted bytes
We have seen standard shell-spawning shellcode for local exploits and port-binding shellcode for remote ones
Shellcode is also sometimes referred to as an exploit payload, since these self-contained programs do the real work once a program has been hacked
Shellcode usually spawns a shell, as that is an elegant way to hand off control; but it can do anything a program can do

Unfortunately, for many hackers the shellcode story stops at copying and pasting bytes
These hackers are just scratching the surface of what's possible
Custom shellcode gives us absolute control over the exploited program
Perhaps we want our shellcode to add an admin account to /etc/passwd or to automatically remove lines from log files
Once we know how to write our own shellcode, our exploits are limited only by our imagination
In addition, writing shellcode develops assembly language skills and employs a number of hacking techniques worth knowing
