When 2 computers talk to each other, they need to speak the same language
The structure of this language is described in layers by the OSI model
The OSI model provides standards that allows hardware, such as routers and firewalls, to focus on one particular aspect of communication that applies to them and ignore others
The OSI model is broken down into conceptual layers of communication
This way, routing and firewall hardware can focus on passing data at the lower layers, ignoring higher layers of data encapsulation used by running applications

7 Layers of OSI:

__________________________________________________________________________________
                             Physical Layer
__________________________________________________________________________________
This layer deals with the physical connection between 2 points
This is the lowest layer, whose primary role is communicating raw bit streams
This layer is also responsible for activating, maintaining, and deactivating these bit-stream communications

__________________________________________________________________________________
                             Data-link Layer
__________________________________________________________________________________
This layer deals with actually transferring data between 2 points
In contrast with the physical layer, which takes care of sending the raw bits, this layer provides high-level functions, such as error correction and flow control
This layer also provides for activating, maintaining and deactivating data-link connections

__________________________________________________________________________________
                             Network Layer
__________________________________________________________________________________
This layer works as a middle ground; its primary role is to pass information between the lower and the higher layers
It provides addressing and routing

__________________________________________________________________________________
                             Transport Layer
__________________________________________________________________________________
This layer provides transparent transfer of data between systems
By providing reliable data communication, this layer allows the higher layers to never worry about reliability or cost-effectiveness of data transmission

__________________________________________________________________________________
                             Session Layer
__________________________________________________________________________________
This layer is responsible for establishing and maintaining connections between network applications

__________________________________________________________________________________
                             Presentation Layer
__________________________________________________________________________________
This layer is responsible for presenting the data to applications in a syntax or language they understand
This allows things like encryption and data compression

__________________________________________________________________________________
                             Application Layer
__________________________________________________________________________________
This layer is concerned with keeping track of the requirements of the application


When data is communicated through these protocol layers, it's sent in small pieces called packets
Each packet contains implementations of these protocol layers
Staring from the application layer, the packet wraps the presentation layer around that data, which wraps the session layer, which wraps the transport later, and so forth
This process is called encapsulation
Each wrapped layer contains a header and a body
The header contains the protocol information needed for the layer, while the body contains the data for that layer
The body of one layer contains the entire package of previously encapsulated layers, like the skin of an onion or the functional contexts found on a program's stack


For example, whenever we browse the Web, the Ethernet cable and card make up the physical layer, taking care of the transmission of raw bits from one end of the cable to the other

The next layer is the data link layer
In the web browser example, Ethernet makes up this layer, which provides the low-level communications between Ethernet ports on the LAN
This protocol allows for communication between Ethernet ports, but these ports don't yet have IP addresses
The concept of IP addresses doesn't exist until the next layer, the network layer

In addition to addressing, this layer is responsible for moving data from one address to another
These 3 lower layers together are able to send packets of data from one IP address to another

The next layer is the transport layer, which for web traffic is TCP; it provides a seamless bidirectional socket connection
The term TCP/IP describes the use of TCP on the transport layer and IP on the network layer
Other addressing schemes exist at this layer; however, our web traffic probably uses IP version 4 (IPv4)
IPv4 addresses follow a familiar form of XX.XX.XX.XX
IP version 6 (IPv6) also exists on this layer, with a totally different addressing scheme
Since IPv4 is most common, IP will always refer to IPv4 in this project

The web traffic itself uses HTTP(Hypertext Transfer Protocol) to communicate, which is in the top layer of the OSI model
When we browse the web, the web browser on our network is communicating with the webserver located on a different private network
When this happens, the data packets are encapsulated down to the physical layer where they are passed to a router
Since the router isn't concerned with what's actually in the packets, it only needs to implement protocols up to the network layer
The router sends the packets out to the Internet, where they reach the other network's router
This router then encapsulates this packet with the lower-layer protocol headers needed for the packet to reach its final destination

The process is shown in the illustration:

                         Network   1                           Network  2
                         application          Internet         application
------------------------______|______-------------------------_____________
                        |     |      |                        |     |     |
(7) Application layer   |     |      |                        |     |     |
------------------------|     |      |------------------------|     |     |
(6) Presentation layer  |     |      |                        |     |     |
------------------------|     |      |------------------------|     |     |
(5) Session layer       |     |      |                        |     |     |
------------------------|     |      |------------------------|     |     |
(4) Transport layer     |     |      |                        |     |     |
------------------------|     |      |------_________---------|     |     |
(3) Network layer       |     |      |      |   /\  |         |     |     |
------------------------|     |      |------|  |  | |---------|     |     |
(2) Data-link layer     |     |      |      |  |  | |         |     |     |
------------------------|     |      |------|  |  | |---------|     |     |
(1) Physical layer      |     |      |      |  |  | |         |     |     |
------------------------|_____|______|------|__|__|_|---------|_____|_____|
                              |                |  |                 |
                              \________________/  \________________/


All of this packet capsulation makes up a complex language that hosts on the Internet (and other types of networks) use to communicate with each other
These protocols are programmed into routers, firewalls and our computer's operating system so that they can communicate
Programs that use networking, such as web browsers and email clients, need to interface with the operating system which handles the network communication
Since the operating system takes care of the details of network encapsulation, writing network programs is just a matter of using the network interface of the OS
