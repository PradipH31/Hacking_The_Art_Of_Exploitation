Idle scanning is a way to scan a target using spoofed packets from an idle host, by observing changes in the idle host
The attacker needs to find a usable idle host that is not sending or receiving any other network traffic and that has a TCP implementation that produces predictable IP IDs that change by a known increment with each packet
IP IDs are meant to be unique per packet per session, and they are commonly incremented by a fixed amount
Predictable IP IDs have never really been considered a security risk, and idle scanning takes advantage of this misconception
Newer operating systems, such as the recent Linux kernel, OpenBSD and Windows Vista, randomize the IP ID, but older operating systems and hardware (such as printers) typically do not

First, the attacker gets the current IP ID of the idle host by contacting it with a SYN packet or an unsolicited SYN/ACK packet and observing the IP ID of the response
By repeating this process a few more times, the increment applied to the IP ID with each packet can be determined

Then, the attacker sends a spoofed SYN packet with the idle host's IP address to a port on the target machine
One of the 2 things will happen, depending on whether that port on the victim machine is listening:
|1|   If that port is listening, a SYN/ACK packet will be sent back to the idle host
      But since the idle host didn't actually send out the initial SYN packet, this response appears to be unsolicited to the idle host, and it responds by sending back an RST packet
|2|   If that port isn't listening, the target machine doesn't send a SYN/ACK packet back to the idle host, so the idle host doesn't respond

At this point, the attacker contacts the idle host again to determine how much the IP ID has incremented
If it has only incremented by 1 interval, no other packets were sent out by the idle host between the 2 checks
This implies that the port on the target machine is closed
If the IP ID has incremented by 2 intervals, a packet, presumably an RST packet, was sent out by the idle machine between the checks
This implies that the port on the target machine is open

The steps are illustrated below for both outcomes

Of course, if the idle host isn't truly idle, the results will be skewed
If there is light traffic on the idle host, multiple packets can be sent for each port
If 20 packets are sent, then a change of 20 incremented steps should be an indication of an open port, and none, of a closed port
Even if there is light traffic, such as 1 or 2 non-scan-related packets sent by the idle host, this difference is large enough that it can still be detected

If this technique is used properly on an idle host that doesn't have any logging capabilities, the attacker can scan any target without ever revealing his or her IP address

After finding a suitable idle host, this type of scanning can be done with nmap using the -sI command-line followed by the idle host's address:
__________________________________________________________________________________
reader@hacking:~/booksrc $ sudo nmap -sI idlehost.com 192.168.42.7
__________________________________________________________________________________

Port open on target
                          |3|  Last ID from
                               idle host = 50
 ___________     SYN/ACK       __________
|           |<----------------|          |
| Idle host |  RST (ID = 52)  | Attacker |
|___________|---------------->|__________|
   /|\ |                       /
    |  |                      /   _
 _  |  |                     /   |1|
|2| |  |                    /
    |  |                   /
    |  |                  /
    |  |                 /    
    |  |                /  SYN
    |  |               /   Spoofed with idle host
    |  |              /    of the source address
    |  |             /
    |  |            /
    |  |           /
    |  |          /
    |  |         /
    |  |        /
    |  |       /
 ___|_\|/___  /
|           |/_
| Idle host |
|___________|
__________________________________________________________________________________

Port closed on target

                          |2|  Last ID from
                               idle host = 50
 ___________     SYN/ACK       __________
|           |<----------------|          |
| Idle host |  RST (ID = 51)  | Attacker |
|___________|---------------->|__________|
                               /
                              /   _
                             /   |1|
                            /
                           /
                          /
                         /    
                        /
                       /  SYN
                      /   Spoofed with idle host
                     /    as the source address
                    /
                   /
                  /
                 /
                /
               /
 ___________  /
|           |/_
| Idle host |
|___________|




Notes:

In this scan, we find a(or many) machine that is not so active but allows TCP connection
We find the machine's increment amount for IP ID with a few SYN packets sent to the machine
Then, we note the last SYN number from the machine
We then send a spoofed packet(with the machine's IP address) to the victim machine
If the port of the victim is open, SYN/ACK returned from the victim will increase SYN of the machine(because of the RST sent)
   when we next contact the machine, the SYN amount should be 2 times increment amount higher than the marked amount
If the port is closed, the SYN of machine will increase 1 times the increment amount