The port number and IP address used in the AF_INET socket address structure are expected to follow the netwokr byte ordering, which is big-endian
This is the opposite of x86's little-endian byte ordering, so these values must be converted
There are several functions specifically for these conversions, whose prototypes are defined in the netinet/in.h and arpa/inet.h include files
Some of the common byte oder conversion functions:

htonl(long value) Host-to-Network Long
    Converts a 32-bit integer from the host's byte order to network byte order
htons(short value) Host-to-Network Short
    Converts a 16-bit integer from the host's byte order to nertwork byte order
ntohl(long value) Network-to-Host Long
    Converts a 32-bit integer from network byte order to the host's byte order
ntohs(short value) Network-to-Host Short
    Convert a 16-bit integer from network byte order to the host's byte order

For compatibility with all architectures, these conversion function should still be used even if the host is using a processor with big-endian byte ordering